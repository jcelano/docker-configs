# our base image
FROM tomcat:7-jre7

#EXPOSE 8080

RUN apt-get update && apt-get install -y \
  git \
  maven \
  mysql-client \
  openjdk-7-jdk


ENV JAVA_OPTS="-Xmx3072m -Xms1024m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:NewSize=128m -Djava.awt.headless=true -Djava.awt.headlesslib=true"
RUN rm -rf /usr/local/tomcat/webapps/*
RUN mkdir /openmrs-dev && mkdir /openmrs-dev/openmrs_home && mkdir /openmrs-dev/openmrs_home/modules

#WE COULD DOWNLOAD THE LATEST
#RUN wget -O /usr/local/tomcat/webapps/openmrs.war https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.0.4.1/openmrs.war/download
ADD web/openmrs.war /usr/local/tomcat/webapps/openmrs.war
ADD web/openmrs-runtime.properties /root/.OpenMRS/openmrs-runtime.properties
#ADD web/modules/*.omod /openmrs-dev/openmrs_home/modules/

#build and deploy mirebalais
RUN git clone https://github.com/PIH/openmrs-module-mirebalais.git /openmrs-dev/mirebalais
RUN cd /openmrs-dev/mirebalais && mvn clean install -DskipTests -Pdistribution
RUN cp -v /openmrs-dev/mirebalais/distro/target/distro/*.omod /openmrs-dev/openmrs_home/modules/



#  do this one if you want to be able to login and debug stuff
#CMD ["tail", "-F", "-n0", "/etc/hosts"]

#  this would start tomcat if you were running OpenMRS that way
#CMD service tomcat start && tail -f /var/lib/tomcat/logs/catalina.out

#  this will run OpenMRS in debug mode, not sure if this is how it is done in production
#CMD cd /openmrs-dev/openmrs-core/webapp && mvn jetty:run
